{
  "name": "Security Group Dangerous Ports Policy",
  "description": "Custom IOM to detect security groups that allow unrestricted access to dangerous ports, preventing potential security breaches and unauthorized network access",
  "platform": "AWS",
  "provider": "AWS",
  "resource_type": "AWS::EC2::SecurityGroup",
  "domain": "CSPM",
  "subdomain": "IOM",
  "severity": 1,
  "logic": "package crowdstrike\\n\\ndefault result := \\"pass\\"\\n\\n# Dangerous ports that should not be open to 0.0.0.0/0\\ndangerous_ports := [22, 3389, 1433, 3306, 5432, 1521, 27017, 6379]\\n\\n# Check for unrestricted access to dangerous ports\\nhas_unrestricted_dangerous_access if {\\n    rule := input.cloud_context.ingress_rules[_]\\n    rule.cidr_blocks[_] == \\"0.0.0.0/0\\"\\n    rule.port in dangerous_ports\\n}\\n\\n# Fail if unrestricted access to dangerous ports\\nresult := \\"fail\\" if {\\n    input.active == true\\n    has_unrestricted_dangerous_access\\n}\\n\\n# Pass if no unrestricted dangerous access\\nresult := \\"pass\\" if {\\n    input.active == true\\n    not has_unrestricted_dangerous_access\\n}",
  "alert_info": "Security group allows unrestricted internet access (0.0.0.0/0) to dangerous ports including SSH, RDP, and database ports",
  "remediation_info": "Navigate to AWS EC2 console|Go to Security Groups in the left navigation|Select the non-compliant security group|Click Inbound rules tab|Review rules allowing 0.0.0.0/0 access to ports 22 (SSH), 3389 (RDP), or database ports|Edit or delete overly permissive rules|Replace with specific IP ranges or security group references|For SSH/RDP access, use bastion hosts or VPN connections|For database access, ensure only application security groups have access|Test connectivity after changes to ensure services still function properly",
  "attack_types": "Network Exposure"
}